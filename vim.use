search and replace hex/null: %s/\%x00/ /g
:set paste per incollare senza tabulazioni superflue
inside parens movement: i( [i.e delete params in fucntion call: di( ]
move from tab to buf view: :ball (:vert ball) viceversa from split to tabs: :tab all
move a tab to split: sb <buffer_index>
move a single split to tab: ctrl+w T
rotate splits: ctrl+wr
reindent all files within folder: args **/*.cpp | argdo execute "norm gg=G" | update
move splits around: ctrl+w HJKL
filname: :echo @%
open "man" of word under cursor: K
set syntax: :set syntax=html | :set filetype=html
count words: :%s/pattern//gn
spellcheck: :setlocal spell spelllang=it_it (per muoversi sugli errori [s ]s per suggesions z= per aggiungere zg)
invert selection: :v/\%V/d
sort lines: :% sort u
print colored output and syntax highlighted code to terminal: vimcat
jump between matching parens: %
retrace your movements in file (backward): <C-O>
retrace your movements in file (forward): <C-I>
insert result of calc : CTRL-R=5*5  will put 25 in the buffer
go back to last buffer (including folder view): ctrl+o
go back to last cursor postion: ``
folding: z
unfold all: zR || fold all: zM
oneliner command: vim -c "5,10s/a/b/g |wq" filename replaces all occurrence of "a" to "b" in line 5-10 and saves
gg=G per reindentare il documento (= indenta; gg inizio; G fine)
access clipboard: "+y, "+p 
quit all: :qa (in general actions on all buffers are trailed with a )
indent multiple (i.e 5) lines: 5>>
indent: >
indent the current scope: >%
paste according indentation: ]p
fix indent on a known language: =i{ reindents "inner block" (inside the braces).
								=a{ reindents "a block" (including the braces).
								=2a{ reindents 2 blocks (this block and containing block).
						With the cursor on { or }:
								=% indents the block (including matching brace).
								>% or <% indents or unindents the block.
recording: q
go back to file explorer: :Ex

Place the cursor on any variable in your program.

gd will take you to the local declaration.
gD will take you to the global declaration.
g* search for the word under the cursor (like *, but g* on 'rain' will find words like 'rainbow').
g# same as g* but in backward direction.
gg goes to the first line in the buffer (or provide a count before the command for a specific line).
G goes to the last line (or provide a count before the command for a specific line).

vimdiff:
]c :        - next difference
[c :        - previous difference
do          - diff obtain
dp          - diff put
:diffupdate - reload diffs

deactivate the coloring in vim

:diffoff!
And to turn it on again

:windo diffthis


To comment out blocks in vim:
hit ctrl+v (visual block mode)
use the down arrow keys to select the lines you want (it won't highlight everything)
Shift+i (capital I)
insert the text you want, i.e. '% '
Press ESC

Load fgrep in quickfix: vim -q <(fgrep empijei)
from vim : :cf quickfix-file

reindent whole folder: :args **/*.cs | argdo execute "norm gg=G" | update
